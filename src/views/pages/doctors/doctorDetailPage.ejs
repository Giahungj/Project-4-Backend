<style>
    /* Th√™m style cho hi·ªáu ·ª©ng ƒë·ªông */
    .card {
        opacity: 0;
        transform: translateX(6rem);
        transition: opacity 1s ease, transform 1s ease;
    }
    .card.visible {
        opacity: 1;
        transform: translateX(0);
    }
    /* C·∫£i thi·ªán giao di·ªán card */
    .card-header {
        border-radius: 0.375rem 0.375rem 0 0;
    }
    .list-group-item {
        border: none;
        border-radius: 0.25rem;
    }
    .badge {
        font-size: 1rem;
        padding: 0.5em 1em;
        border-radius: 1rem;
    }
</style>

<div class="container">
    <div class="header d-flex justify-content-between align-items-center p-3 border-bottom">
        <h3 class="text-blue-800 fw-semibold m-0">Th√¥ng tin b√°c sƒ©</h3>
        <div class="d-flex align-items-center">
            <div class="dropdown me-2">
                <button class="btn btn-outline-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-bars"></i>
                </button>
                <ul class="dropdown-menu border shadow-sm p-0" style="width: 18em;">
                    <li><a class="dropdown-item" href="#">üìÖ C·∫≠p nh·∫≠t l·ªãch l√†m vi·ªác</a></li>
                    <hr class="m-0">
                    <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#switchTheDoctorSpecialtyModal">ü©∫ Chuy·ªÉn ƒë·ªïi chuy√™n khoa</a></li>
                    <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#switchTheDoctorWorkFacilityModal">üè• Chuy·ªÉn ƒë·ªïi c∆° s·ªü l√†m vi·ªác</a></li>
                    <hr class="m-0">
                    <li><a class="dropdown-item text-danger" href="#">‚ùå X√≥a b√°c sƒ©</a></li>
                </ul>
                
            </div>
            <!-- Qu·∫£n l√Ω t√†i kho·∫£n -->
            <a href="/user-detail/<%= data.doctor.User.id %>" class="btn btn-outline-primary btn-sm">Qu·∫£n l√Ω t√†i kho·∫£n</a>
        </div>
    </div>
    

    <div class="row mt-4">
        <!-- Th√¥ng tin ch√≠nh c·ªßa b√°c sƒ© -->
        <div class="col m-2">
            <div class="card shadow-sm flex-fill">
                <div class="card-header bg-cyan-600 text-white font-weight-bold text-center">
                    TH√îNG TIN B√ÅC Sƒ®
                </div>
                <div class="card-body">
                    <div class="text-center">
                        <div class="d-flex justify-content-center mb-2">
                            <img src="<%= data.doctor.User.avatar ? '/images/uploads/' + data.doctor.User.avatar : '/images/user.png' %>" 
                                    alt="·∫¢nh b√°c sƒ©" 
                                    class="rounded-circle shadow-sm img-thumbnail" 
                                    style="width: 120px; height: 120px; object-fit: cover;"
                                    class="img-fluid" 
                            >
                        </div>
                        <h4 class="text-cyan-800 fw-semibold">B√°c sƒ© <%= data.doctor.User.name %></h4>
                        <% if (avgScore != null) { %>
                            <p class="text-cyan-700">‚≠ê<span class="text-dark"> ƒêi·ªÉm ƒë√°nh gi√°:</span> <%= avgScore %></p>
                        <% } else { %>
                            <p class="text-cyan-700">‚≠ê ƒêi·ªÉm ƒë√°nh gi√°: <span class="text-gray-500">Ch∆∞a c√≥ ƒë√°nh gi√°</span></p>
                        <% } %>
                        <p class="text-cyan-700"><span class="text-dark">ƒê√£ kh√°m: </span><%= totalBookings %> <span class="text-dark">ƒë∆°n kh√°m</span></p>
                    </div>
                    <hr class="my-2">
                    <div class="list-group">
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Li√™n h·ªá</span>
                            <small><%= data.doctor.User.email %></small>
                            <button class="btn btn-sm" onclick="copyEmail()"><i class="fa-regular fa-clone"></i></button>
                        </div>
                        <hr class="m-0">
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Chuy√™n khoa</span>
                            <small><%= data.doctor.Specialty.name %></small>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <span>N∆°i l√†m vi·ªác</span>
                            <small><%= data.doctor.Facility.name %></small>
                        </div>
                        <hr class="m-0">
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Kinh nghi·ªám</span>
                            <small><%= data.doctor.experience %></small>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Gi√° kh√°m</span>
                            <small><%= data.doctor.price %></small>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Gi√° c·∫≠p nh·∫≠t</span>
                            <small><%= data.doctor.infor %></small>
                        </div>
                        <hr class="m-0">
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <small>Ng√†y t·∫°o: <%= data.doctor.createdAt %></small>
                            <small>C·∫≠p nh·∫≠t: <%= data.doctor.updatedAt %></small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- N·ªôi dung chi ti·∫øt -->
        <div class="col-8">
            <div class="row mt-2">
                <div class="col">
                    <div class="card shadow-sm flex-fill">
                        <div class="card-header bg-cyan-600 text-white font-weight-bold text-center">
                            üìÖ L·ªäCH L√ÄM VI·ªÜC
                        </div>
                        <div class="card-body">
                                <button class="btn btn-primary px-4 mb-2 py-2 fw-semibold w-100" data-bs-toggle="modal" data-bs-target="#registerScheduleModal">
                                    ƒêƒÉng k√Ω l·ªãch kh√°m
                                </button>
                                <%- include('../../partials/doctors/doctorScheduleList') %>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col">
                    <!-- L·ªãch h·∫πn b·ªánh nh√¢n -->
                    <div class="card shadow-sm flex-fill">
                        <div class="card-header bg-cyan-600 text-white font-weight-bold text-center">
                            üìù L·ªäCH ƒê·∫∂T
                        </div>
                        <div class="card-body">
                            <%- include('../../partials/doctors/doctorBookingList') %>
                        </div>
                    </div>
                </div>
            </div>
        
            <div class="row mt-4">
                <div class="col">
                    <!-- ƒê√°nh gi√° t·ª´ b·ªánh nh√¢n -->
                    <div class="card shadow-sm flex-fill">
                        <div class="card-header bg-cyan-600 text-white font-weight-bold text-center">
                            ‚≠ê ƒê√ÅNH GI√Å T·ª™ B·ªÜNH NH√ÇN
                        </div>
                        <div class="card-body">
                            <%- include('../../partials/doctors/doctorReviewList') %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('../../partials/modals/doctors/doctorRegisterScheduleModal') %>
<%- include('../../partials/modals/doctors/doctorScheduleModal') %>
<%- include('../../partials/modals/doctors/switchTheDoctorWorkFacilityModal') %>
<%- include('../../partials/modals/doctors/switchTheDoctorSpecialtyModal') %>

<script>
    // Th√™m class 'visible' cho t·ª´ng card v·ªõi ƒë·ªô tr·ªÖ ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng tu·∫ßn t·ª±
    document.addEventListener('DOMContentLoaded', () => {
        const cards = document.querySelectorAll('.card');

        const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                    observer.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.1
        });

        cards.forEach(card => observer.observe(card));
    });

    function copyEmail() {
        let emailText = document.getElementById("doctorEmail").innerText;
        navigator.clipboard.writeText(emailText).then(() => {
            alert("Email ƒë√£ ƒë∆∞·ª£c sao ch√©p!");
        }).catch(err => {
            console.error("Kh√¥ng th·ªÉ sao ch√©p email", err);
        });
    }
    document.querySelectorAll(".time-btn").forEach(button => {
        button.addEventListener("click", function() {
            let time = this.getAttribute("data-time");
            let timeInputs = document.getElementById("timeInputs");
            let existingInput = document.querySelector(`[data-time-input="${time}"]`);
            
            if (existingInput) {
                existingInput.remove();
                this.classList.remove("btn-primary");
                this.classList.add("btn-outline-dark");
            } else {
                let inputContainer = document.createElement("div");
                inputContainer.setAttribute("data-time-input", time);
                inputContainer.innerHTML = `
                    <label class="fw-semibold">S·ªë l∆∞·ª£ng b·ªánh ( ${time} )</label>
                    <input type="number" class="form-control" name="maxNumber" min="1" required>
                `;
                timeInputs.appendChild(inputContainer);
                this.classList.remove("btn-outline-dark");
                this.classList.add("btn-primary");
            }
        });
    });
    
    async function loadScheduleDetail(scheduleId) {
        try {
            let response = await fetch(`/api/schedule/read/${scheduleId}`); // G·ªçi API l·∫•y th√¥ng tin l·ªãch h·∫πn
            let data = await response.json();

            if (data.EC === 0) { // Ki·ªÉm tra n·∫øu l·∫•y d·ªØ li·ªáu th√†nh c√¥ng
                document.getElementById("scheduleId").innerText = data.DT.schedule.id;
                document.getElementById("scheduleDate").innerText = new Date(data.DT.schedule.date).toLocaleDateString("vi-VN");
                document.getElementById("scheduleTime").innerText = `${data.DT.schedule.Timeslot.startTime} - ${data.DT.schedule.Timeslot.endTime}`;

                let tableBody = document.getElementById("bookingTableBody");
                tableBody.innerHTML = "";

                data.DT.bookings.forEach((booking) => {
                    let row = `
                        <tr>
                            <td>${booking.id}</td>
                            <td>${booking.Patient?.User?.name || "Ch∆∞a c√≥ th√¥ng tin"}</td>
                        </tr>
                    `;
                    tableBody.innerHTML += row;
                });
            document.getElementById("viewDetailsBtn").onclick = () => {
                const id = document.getElementById("scheduleId")?.textContent.trim();
                id ? (window.location.href = `/booking-detail/${id}`) : alert("Kh√¥ng t√¨m th·∫•y ID l·ªãch h·∫πn!");
            };
            } else {
                alert("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu l·ªãch h·∫πn!");
            }
        } catch (error) {
            console.error("L·ªói khi t·∫£i l·ªãch h·∫πn:", error);
        }
    }
</script>

<% if (EM && EM.trim() !== '') { %>
    <script>
        let EC = '<%= EC %>';  // L·∫•y gi√° tr·ªã c·ªßa EC t·ª´ server
        const iconMap = {
            '0': 'success',     // Th√†nh c√¥ng
            '-1': 'error',      // L·ªói
            '1': 'warning',     // C·∫£nh b√°o
            '2': 'info',        // Th√¥ng tin
            '3': 'question'     // C√¢u h·ªèi
        };
        const iconType = iconMap[EC] || 'info';
        window.addEventListener('load', () => {
            Swal.fire({
                title: 'Th√¥ng b√°o!',
                text: '<%= EM %>',
                icon: iconType,
                confirmButtonText: 'OK',
            });
        });
    </script>
<% } %>