<!-- Modal ƒëƒÉng k√Ω l·ªãch kh√°m -->
<div class="modal fade" id="registerScheduleModal" tabindex="-1" aria-labelledby="registerScheduleLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-blue-600 text-white">
                <h5 class="modal-title" id="registerScheduleLabel">üìÖ ƒêƒÉng k√Ω l·ªãch kh√°m</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="cretaeScheduleForm" method="POST" action="/schedule/create">
                    <div class="row">
                        <div class="col-md-8 border-2 border-end">
                            <div class="mb-3">
                                <label for="scheduleDay" class="fw-semibold">Ch·ªçn ng√†y</label>
                                <select class="form-control" id="scheduleDay" name="date" required></select>
                            </div>
                            <div class="mb-3">
                                <label class="fw-semibold">Ch·ªçn khung gi·ªù</label>
                                <div id="timeSlotsContainer" class="d-flex flex-column gap-3">
                                    <input type="hidden" name="doctorId" value="<%= data.doctor.id %>">
                                    <% let shifts = {1: "Bu·ªïi s√°ng", 2: "Bu·ªïi chi·ªÅu", 3: "Bu·ªïi t·ªëi"}; %>
                                    <% Object.keys(shifts).forEach(shift => { %>
                                        <div class="shift-container" data-shift="<%= shift %>">
                                            <h6 class="fw-bold text-blue-500"><%= shifts[shift] %></h6>
                                            <div class="d-flex flex-wrap gap-2">
                                                <% data.timeSlot.forEach(slot => { %>
                                                    <% if (slot.shift == shift) { %>
                                                        <div class="form-check">
                                                            <input class="form-check-input time-checkbox time-btn" type="checkbox" 
                                                                id="slot_<%= slot.id %>" name="timeSlotId" 
                                                                value="<%= slot.id %>" data-time="<%= slot.startTime %>-<%= slot.endTime %>">
                                                            <label class="form-check-label btn btn-outline-dark" for="slot_<%= slot.id %>">
                                                                <%= slot.startTime %> - <%= slot.endTime %>
                                                            </label>
                                                        </div>
                                                    <% } %>
                                                <% }); %>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                        </div>

                        <!-- C·ªôt ph·∫£i: Nh·∫≠p s·ªë l∆∞·ª£ng b·ªánh nh√¢n -->
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label class="fw-semibold">S·ªë l∆∞·ª£ng b·ªánh nh√¢n t·ªëi ƒëa</label>
                                <input type="number" class="form-control"
                                    placeholder="45 b·ªánh nh√¢n t·ªëi ƒëa" min="1" disabled>
                            </div>
                            <div id="timeInputs"></div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary w-100 mt-3">X√°c nh·∫≠n</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const scheduleDaySelect = document.getElementById('scheduleDay');
        const today = new Date();
        const todayOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate());
        // M·∫£ng t√™n ng√†y trong tu·∫ßn
        const daysOfWeek = ['Ch·ªß nh·∫≠t', 'Th·ª© hai', 'Th·ª© ba', 'Th·ª© t∆∞', 'Th·ª© nƒÉm', 'Th·ª© s√°u', 'Th·ª© b·∫£y'];
        // T·∫°o 7 ng√†y t√≠nh t·ª´ h√¥m nay
        for (let i = 0; i < 7; i++) {
            const optionDate = new Date(today);
            optionDate.setDate(today.getDate() + i);
            const weekdayName = daysOfWeek[optionDate.getDay()]; // L·∫•y t√™n ng√†y theo th·ª© t·ª± tu·∫ßn
            const dd = String(optionDate.getDate()).padStart(2, '0');
            const mm = String(optionDate.getMonth() + 1).padStart(2, '0');
            const yyyy = optionDate.getFullYear();
            const formattedDate = `${dd}/${mm}/${yyyy}`;
            const optionValue = `${yyyy}-${mm}-${dd}`;
            const option = document.createElement('option');
            option.value = optionValue;
            option.textContent = `${weekdayName} (${formattedDate})`;
            // V√¥ hi·ªáu h√≥a n·∫øu ng√†y nh·ªè h∆°n h√¥m nay (ch·ªâ t√≠nh ng√†y)
            const optionOnly = new Date(optionDate.getFullYear(), optionDate.getMonth(), optionDate.getDate());
            if (optionOnly < todayOnly) option.disabled = true;
            scheduleDaySelect.appendChild(option);
        }
    });
</script>

<script>
    document.querySelectorAll(".time-checkbox").forEach(checkbox => {
        checkbox.addEventListener("change", function() {
            const time = this.getAttribute("data-time");
            const timeInputs = document.getElementById("timeInputs");
            // T√¨m xem ƒë√£ c√≥ ph·∫ßn input n√†o cho khung gi·ªù n√†y ch∆∞a
            let existingInput = document.querySelector(`[data-time-input="${time}"]`);
            
            if (this.checked) {
                // N·∫øu ch∆∞a c√≥, t·∫°o ph·∫ßn input m·ªõi
                if (!existingInput) {
                    const div = document.createElement("div");
                    div.setAttribute("data-time-input", time);
                    // S·ª≠ d·ª•ng gi√° tr·ªã c·ªßa checkbox (gi√° tr·ªã n√†y ph·∫£i l√† timeSlot id)
                    // ƒë·ªÉ ƒë·∫∑t t√™n input theo c·∫•u tr√∫c: maxNumber[timeSlotId]
                    div.innerHTML = `
                        <label class="fw-semibold">S·ªë l∆∞·ª£ng b·ªánh ( ${time} )</label>
                        <input type="number" class="form-control" name="maxNumber[${this.value}]" min="1" required>
                    `;
                    timeInputs.appendChild(div);
                }
            } else {
                // N·∫øu checkbox b·ªã b·ªè ch·ªçn, x√≥a ph·∫ßn input t∆∞∆°ng ·ª©ng
                if (existingInput) {
                    existingInput.remove();
                }
            }
        });
    });
</script>
<!-- 
<script>
    document.querySelectorAll(".time-checkbox").forEach(checkbox => {
        checkbox.addEventListener("change", function() {
            const time = this.getAttribute("data-time");
            const timeInputs = document.getElementById("timeInputs");
            // T√¨m xem ƒë√£ c√≥ ph·∫ßn input n√†o cho khung gi·ªù n√†y ch∆∞a
            let existingInput = document.querySelector(`[data-time-input="${time}"]`);
            
            if (this.checked) {
                // N·∫øu ch∆∞a c√≥, t·∫°o ph·∫ßn input m·ªõi
                if (!existingInput) {
                    const div = document.createElement("div");
                    div.setAttribute("data-time-input", time);
                    // S·ª≠ d·ª•ng gi√° tr·ªã c·ªßa checkbox (gi√° tr·ªã n√†y ph·∫£i l√† timeSlot id)
                    // ƒë·ªÉ ƒë·∫∑t t√™n input theo c·∫•u tr√∫c: maxNumber[timeSlotId]
                    div.innerHTML = `
                        <label class="fw-semibold">S·ªë l∆∞·ª£ng b·ªánh ( ${time} )</label>
                        <input type="number" class="form-control" name="maxNumber[${this.value}]" min="1" required>
                    `;
                    timeInputs.appendChild(div);
                }
            } else {
                // N·∫øu checkbox b·ªã b·ªè ch·ªçn, x√≥a ph·∫ßn input t∆∞∆°ng ·ª©ng
                if (existingInput) {
                    existingInput.remove();
                }
            }
        });
    });
</script> -->
